/*
 * generated by Xtext 2.29.0
 */
grammar InternalDataflow;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package info.computationalmodeling.lang.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package info.computationalmodeling.lang.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import info.computationalmodeling.lang.services.DataflowGrammarAccess;

}
@parser::members {
	private DataflowGrammarAccess grammarAccess;

	public void setGrammarAccess(DataflowGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDataflowModel
entryRuleDataflowModel
:
{ before(grammarAccess.getDataflowModelRule()); }
	 ruleDataflowModel
{ after(grammarAccess.getDataflowModelRule()); } 
	 EOF 
;

// Rule DataflowModel
ruleDataflowModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataflowModelAccess().getGroup()); }
		(rule__DataflowModel__Group__0)
		{ after(grammarAccess.getDataflowModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEdge
entryRuleEdge
:
{ before(grammarAccess.getEdgeRule()); }
	 ruleEdge
{ after(grammarAccess.getEdgeRule()); } 
	 EOF 
;

// Rule Edge
ruleEdge 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEdgeAccess().getAlternatives()); }
		(rule__Edge__Alternatives)
		{ after(grammarAccess.getEdgeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEdgeSpecs
entryRuleEdgeSpecs
:
{ before(grammarAccess.getEdgeSpecsRule()); }
	 ruleEdgeSpecs
{ after(grammarAccess.getEdgeSpecsRule()); } 
	 EOF 
;

// Rule EdgeSpecs
ruleEdgeSpecs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEdgeSpecsAccess().getGroup()); }
		(rule__EdgeSpecs__Group__0)
		{ after(grammarAccess.getEdgeSpecsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEdgeAnnotation
entryRuleEdgeAnnotation
:
{ before(grammarAccess.getEdgeAnnotationRule()); }
	 ruleEdgeAnnotation
{ after(grammarAccess.getEdgeAnnotationRule()); } 
	 EOF 
;

// Rule EdgeAnnotation
ruleEdgeAnnotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEdgeAnnotationAccess().getAlternatives()); }
		(rule__EdgeAnnotation__Alternatives)
		{ after(grammarAccess.getEdgeAnnotationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActor
entryRuleActor
:
{ before(grammarAccess.getActorRule()); }
	 ruleActor
{ after(grammarAccess.getActorRule()); } 
	 EOF 
;

// Rule Actor
ruleActor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActorAccess().getGroup()); }
		(rule__Actor__Group__0)
		{ after(grammarAccess.getActorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActorSpecs
entryRuleActorSpecs
:
{ before(grammarAccess.getActorSpecsRule()); }
	 ruleActorSpecs
{ after(grammarAccess.getActorSpecsRule()); } 
	 EOF 
;

// Rule ActorSpecs
ruleActorSpecs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActorSpecsAccess().getGroup()); }
		(rule__ActorSpecs__Group__0)
		{ after(grammarAccess.getActorSpecsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActorAnnotation
entryRuleActorAnnotation
:
{ before(grammarAccess.getActorAnnotationRule()); }
	 ruleActorAnnotation
{ after(grammarAccess.getActorAnnotationRule()); } 
	 EOF 
;

// Rule ActorAnnotation
ruleActorAnnotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActorAnnotationAccess().getGroup()); }
		(rule__ActorAnnotation__Group__0)
		{ after(grammarAccess.getActorAnnotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInputSignals
entryRuleInputSignals
:
{ before(grammarAccess.getInputSignalsRule()); }
	 ruleInputSignals
{ after(grammarAccess.getInputSignalsRule()); } 
	 EOF 
;

// Rule InputSignals
ruleInputSignals 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputSignalsAccess().getGroup()); }
		(rule__InputSignals__Group__0)
		{ after(grammarAccess.getInputSignalsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignal
entryRuleSignal
:
{ before(grammarAccess.getSignalRule()); }
	 ruleSignal
{ after(grammarAccess.getSignalRule()); } 
	 EOF 
;

// Rule Signal
ruleSignal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignalAccess().getGroup()); }
		(rule__Signal__Group__0)
		{ after(grammarAccess.getSignalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeStamp
entryRuleTimeStamp
:
{ before(grammarAccess.getTimeStampRule()); }
	 ruleTimeStamp
{ after(grammarAccess.getTimeStampRule()); } 
	 EOF 
;

// Rule TimeStamp
ruleTimeStamp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeStampAccess().getAlternatives()); }
		(rule__TimeStamp__Alternatives)
		{ after(grammarAccess.getTimeStampAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumber
entryRuleNumber
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberAccess().getAlternatives()); }
		(rule__Number__Alternatives)
		{ after(grammarAccess.getNumberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRatio
entryRuleRatio
:
{ before(grammarAccess.getRatioRule()); }
	 ruleRatio
{ after(grammarAccess.getRatioRule()); } 
	 EOF 
;

// Rule Ratio
ruleRatio 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRatioAccess().getGroup()); }
		(rule__Ratio__Group__0)
		{ after(grammarAccess.getRatioAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePNInt
entryRulePNInt
:
{ before(grammarAccess.getPNIntRule()); }
	 rulePNInt
{ after(grammarAccess.getPNIntRule()); } 
	 EOF 
;

// Rule PNInt
rulePNInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPNIntAccess().getAlternatives()); }
		(rule__PNInt__Alternatives)
		{ after(grammarAccess.getPNIntAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInput
entryRuleInput
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputAccess().getNameAssignment()); }
		(rule__Input__NameAssignment)
		{ after(grammarAccess.getInputAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutput
entryRuleOutput
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputAccess().getNameAssignment()); }
		(rule__Output__NameAssignment)
		{ after(grammarAccess.getOutputAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeAccess().getGroup_0()); }
		(rule__Edge__Group_0__0)
		{ after(grammarAccess.getEdgeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getEdgeAccess().getGroup_1()); }
		(rule__Edge__Group_1__0)
		{ after(grammarAccess.getEdgeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeAnnotationAccess().getGroup_0()); }
		(rule__EdgeAnnotation__Group_0__0)
		{ after(grammarAccess.getEdgeAnnotationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getEdgeAnnotationAccess().getGroup_1()); }
		(rule__EdgeAnnotation__Group_1__0)
		{ after(grammarAccess.getEdgeAnnotationAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getEdgeAnnotationAccess().getGroup_2()); }
		(rule__EdgeAnnotation__Group_2__0)
		{ after(grammarAccess.getEdgeAnnotationAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getEdgeAnnotationAccess().getGroup_3()); }
		(rule__EdgeAnnotation__Group_3__0)
		{ after(grammarAccess.getEdgeAnnotationAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getEdgeAnnotationAccess().getGroup_4()); }
		(rule__EdgeAnnotation__Group_4__0)
		{ after(grammarAccess.getEdgeAnnotationAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeStamp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeStampAccess().getNumberParserRuleCall_0()); }
		ruleNumber
		{ after(grammarAccess.getTimeStampAccess().getNumberParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeStampAccess().getInfKeyword_1()); }
		'-inf'
		{ after(grammarAccess.getTimeStampAccess().getInfKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getRatioAssignment_0()); }
		(rule__Number__RatioAssignment_0)
		{ after(grammarAccess.getNumberAccess().getRatioAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumberAccess().getValueAssignment_1()); }
		(rule__Number__ValueAssignment_1)
		{ after(grammarAccess.getNumberAccess().getValueAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ValueAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getValuePNIntParserRuleCall_1_0_0()); }
		rulePNInt
		{ after(grammarAccess.getNumberAccess().getValuePNIntParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumberAccess().getValueFloatTerminalRuleCall_1_0_1()); }
		RULE_FLOAT
		{ after(grammarAccess.getNumberAccess().getValueFloatTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PNInt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPNIntAccess().getINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getPNIntAccess().getINTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPNIntAccess().getNINTTerminalRuleCall_1()); }
		RULE_NINT
		{ after(grammarAccess.getPNIntAccess().getNINTTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group__0__Impl
	rule__DataflowModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getGroup_0()); }
	(rule__DataflowModel__Group_0__0)?
	{ after(grammarAccess.getDataflowModelAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group__1__Impl
	rule__DataflowModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getDataflowKeyword_1()); }
	'dataflow'
	{ after(grammarAccess.getDataflowModelAccess().getDataflowKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group__2__Impl
	rule__DataflowModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getGraphKeyword_2()); }
	'graph'
	{ after(grammarAccess.getDataflowModelAccess().getGraphKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group__3__Impl
	rule__DataflowModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getNameAssignment_3()); }
	(rule__DataflowModel__NameAssignment_3)
	{ after(grammarAccess.getDataflowModelAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group__4__Impl
	rule__DataflowModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getDataflowModelAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group__5__Impl
	rule__DataflowModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getGroup_5()); }
	(rule__DataflowModel__Group_5__0)?
	{ after(grammarAccess.getDataflowModelAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group__6__Impl
	rule__DataflowModel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getGroup_6()); }
	(rule__DataflowModel__Group_6__0)?
	{ after(grammarAccess.getDataflowModelAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group__7__Impl
	rule__DataflowModel__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getEdgesAssignment_7()); }
	(rule__DataflowModel__EdgesAssignment_7)*
	{ after(grammarAccess.getDataflowModelAccess().getEdgesAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group__8__Impl
	rule__DataflowModel__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getDataflowModelAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getInputsignalsAssignment_9()); }
	(rule__DataflowModel__InputsignalsAssignment_9)?
	{ after(grammarAccess.getDataflowModelAccess().getInputsignalsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowModel__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group_0__0__Impl
	rule__DataflowModel__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getAuthorKeyword_0_0()); }
	'author'
	{ after(grammarAccess.getDataflowModelAccess().getAuthorKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group_0__1__Impl
	rule__DataflowModel__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getEqualsSignKeyword_0_1()); }
	'='
	{ after(grammarAccess.getDataflowModelAccess().getEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getAuthorAssignment_0_2()); }
	(rule__DataflowModel__AuthorAssignment_0_2)
	{ after(grammarAccess.getDataflowModelAccess().getAuthorAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowModel__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group_5__0__Impl
	rule__DataflowModel__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getInputsKeyword_5_0()); }
	'inputs'
	{ after(grammarAccess.getDataflowModelAccess().getInputsKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group_5__1__Impl
	rule__DataflowModel__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getInputsAssignment_5_1()); }
	(rule__DataflowModel__InputsAssignment_5_1)
	{ after(grammarAccess.getDataflowModelAccess().getInputsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getGroup_5_2()); }
	(rule__DataflowModel__Group_5_2__0)*
	{ after(grammarAccess.getDataflowModelAccess().getGroup_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowModel__Group_5_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group_5_2__0__Impl
	rule__DataflowModel__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_5_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getCommaKeyword_5_2_0()); }
	','
	{ after(grammarAccess.getDataflowModelAccess().getCommaKeyword_5_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_5_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_5_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getInputsAssignment_5_2_1()); }
	(rule__DataflowModel__InputsAssignment_5_2_1)
	{ after(grammarAccess.getDataflowModelAccess().getInputsAssignment_5_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowModel__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group_6__0__Impl
	rule__DataflowModel__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getOutputsKeyword_6_0()); }
	'outputs'
	{ after(grammarAccess.getDataflowModelAccess().getOutputsKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group_6__1__Impl
	rule__DataflowModel__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getOutputsAssignment_6_1()); }
	(rule__DataflowModel__OutputsAssignment_6_1)
	{ after(grammarAccess.getDataflowModelAccess().getOutputsAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getGroup_6_2()); }
	(rule__DataflowModel__Group_6_2__0)*
	{ after(grammarAccess.getDataflowModelAccess().getGroup_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowModel__Group_6_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group_6_2__0__Impl
	rule__DataflowModel__Group_6_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_6_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getCommaKeyword_6_2_0()); }
	','
	{ after(grammarAccess.getDataflowModelAccess().getCommaKeyword_6_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_6_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataflowModel__Group_6_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__Group_6_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataflowModelAccess().getOutputsAssignment_6_2_1()); }
	(rule__DataflowModel__OutputsAssignment_6_2_1)
	{ after(grammarAccess.getDataflowModelAccess().getOutputsAssignment_6_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edge__Group_0__0__Impl
	rule__Edge__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAccess().getSrcactAssignment_0_0()); }
	(rule__Edge__SrcactAssignment_0_0)
	{ after(grammarAccess.getEdgeAccess().getSrcactAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edge__Group_0__1__Impl
	rule__Edge__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAccess().getHyphenMinusKeyword_0_1()); }
	('-')*
	{ after(grammarAccess.getEdgeAccess().getHyphenMinusKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edge__Group_0__2__Impl
	rule__Edge__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAccess().getHyphenMinusGreaterThanSignKeyword_0_2()); }
	'->'
	{ after(grammarAccess.getEdgeAccess().getHyphenMinusGreaterThanSignKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edge__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAccess().getDstactAssignment_0_3()); }
	(rule__Edge__DstactAssignment_0_3)
	{ after(grammarAccess.getEdgeAccess().getDstactAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edge__Group_1__0__Impl
	rule__Edge__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAccess().getSrcactAssignment_1_0()); }
	(rule__Edge__SrcactAssignment_1_0)
	{ after(grammarAccess.getEdgeAccess().getSrcactAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edge__Group_1__1__Impl
	rule__Edge__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getEdgeAccess().getHyphenMinusKeyword_1_1()); }
		('-')
		{ after(grammarAccess.getEdgeAccess().getHyphenMinusKeyword_1_1()); }
	)
	(
		{ before(grammarAccess.getEdgeAccess().getHyphenMinusKeyword_1_1()); }
		('-')*
		{ after(grammarAccess.getEdgeAccess().getHyphenMinusKeyword_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edge__Group_1__2__Impl
	rule__Edge__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAccess().getSpecsAssignment_1_2()); }
	(rule__Edge__SpecsAssignment_1_2)
	{ after(grammarAccess.getEdgeAccess().getSpecsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edge__Group_1__3__Impl
	rule__Edge__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAccess().getHyphenMinusKeyword_1_3()); }
	('-')*
	{ after(grammarAccess.getEdgeAccess().getHyphenMinusKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edge__Group_1__4__Impl
	rule__Edge__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAccess().getHyphenMinusGreaterThanSignKeyword_1_4()); }
	'->'
	{ after(grammarAccess.getEdgeAccess().getHyphenMinusGreaterThanSignKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edge__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAccess().getDstactAssignment_1_5()); }
	(rule__Edge__DstactAssignment_1_5)
	{ after(grammarAccess.getEdgeAccess().getDstactAssignment_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EdgeSpecs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeSpecs__Group__0__Impl
	rule__EdgeSpecs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeSpecs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeSpecsAccess().getEdgeSpecsAction_0()); }
	()
	{ after(grammarAccess.getEdgeSpecsAccess().getEdgeSpecsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeSpecs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeSpecs__Group__1__Impl
	rule__EdgeSpecs__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeSpecs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeSpecsAccess().getAnnotationsAssignment_1()); }
	(rule__EdgeSpecs__AnnotationsAssignment_1)
	{ after(grammarAccess.getEdgeSpecsAccess().getAnnotationsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeSpecs__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeSpecs__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeSpecs__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeSpecsAccess().getGroup_2()); }
	(rule__EdgeSpecs__Group_2__0)*
	{ after(grammarAccess.getEdgeSpecsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EdgeSpecs__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeSpecs__Group_2__0__Impl
	rule__EdgeSpecs__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeSpecs__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeSpecsAccess().getSemicolonKeyword_2_0()); }
	';'
	{ after(grammarAccess.getEdgeSpecsAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeSpecs__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeSpecs__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeSpecs__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeSpecsAccess().getAnnotationsAssignment_2_1()); }
	(rule__EdgeSpecs__AnnotationsAssignment_2_1)
	{ after(grammarAccess.getEdgeSpecsAccess().getAnnotationsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EdgeAnnotation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeAnnotation__Group_0__0__Impl
	rule__EdgeAnnotation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAnnotationAccess().getGroup_0_0()); }
	(rule__EdgeAnnotation__Group_0_0__0)?
	{ after(grammarAccess.getEdgeAnnotationAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeAnnotation__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAnnotationAccess().getInitialtokensAssignment_0_1()); }
	(rule__EdgeAnnotation__InitialtokensAssignment_0_1)
	{ after(grammarAccess.getEdgeAnnotationAccess().getInitialtokensAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EdgeAnnotation__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeAnnotation__Group_0_0__0__Impl
	rule__EdgeAnnotation__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAnnotationAccess().getInitialKeyword_0_0_0()); }
	'initial'
	{ after(grammarAccess.getEdgeAnnotationAccess().getInitialKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeAnnotation__Group_0_0__1__Impl
	rule__EdgeAnnotation__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAnnotationAccess().getTokensKeyword_0_0_1()); }
	'tokens'
	{ after(grammarAccess.getEdgeAnnotationAccess().getTokensKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeAnnotation__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAnnotationAccess().getColonKeyword_0_0_2()); }
	':'
	{ after(grammarAccess.getEdgeAnnotationAccess().getColonKeyword_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EdgeAnnotation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeAnnotation__Group_1__0__Impl
	rule__EdgeAnnotation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAnnotationAccess().getProductionKeyword_1_0()); }
	'production'
	{ after(grammarAccess.getEdgeAnnotationAccess().getProductionKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeAnnotation__Group_1__1__Impl
	rule__EdgeAnnotation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAnnotationAccess().getRateKeyword_1_1()); }
	'rate'
	{ after(grammarAccess.getEdgeAnnotationAccess().getRateKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeAnnotation__Group_1__2__Impl
	rule__EdgeAnnotation__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAnnotationAccess().getColonKeyword_1_2()); }
	':'
	{ after(grammarAccess.getEdgeAnnotationAccess().getColonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeAnnotation__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAnnotationAccess().getProdrateAssignment_1_3()); }
	(rule__EdgeAnnotation__ProdrateAssignment_1_3)
	{ after(grammarAccess.getEdgeAnnotationAccess().getProdrateAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EdgeAnnotation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeAnnotation__Group_2__0__Impl
	rule__EdgeAnnotation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAnnotationAccess().getConsumptionKeyword_2_0()); }
	'consumption'
	{ after(grammarAccess.getEdgeAnnotationAccess().getConsumptionKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeAnnotation__Group_2__1__Impl
	rule__EdgeAnnotation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAnnotationAccess().getRateKeyword_2_1()); }
	'rate'
	{ after(grammarAccess.getEdgeAnnotationAccess().getRateKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeAnnotation__Group_2__2__Impl
	rule__EdgeAnnotation__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAnnotationAccess().getColonKeyword_2_2()); }
	':'
	{ after(grammarAccess.getEdgeAnnotationAccess().getColonKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeAnnotation__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAnnotationAccess().getConsrateAssignment_2_3()); }
	(rule__EdgeAnnotation__ConsrateAssignment_2_3)
	{ after(grammarAccess.getEdgeAnnotationAccess().getConsrateAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EdgeAnnotation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeAnnotation__Group_3__0__Impl
	rule__EdgeAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAnnotationAccess().getNameKeyword_3_0()); }
	'name'
	{ after(grammarAccess.getEdgeAnnotationAccess().getNameKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeAnnotation__Group_3__1__Impl
	rule__EdgeAnnotation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAnnotationAccess().getColonKeyword_3_1()); }
	':'
	{ after(grammarAccess.getEdgeAnnotationAccess().getColonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeAnnotation__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAnnotationAccess().getNameAssignment_3_2()); }
	(rule__EdgeAnnotation__NameAssignment_3_2)
	{ after(grammarAccess.getEdgeAnnotationAccess().getNameAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EdgeAnnotation__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeAnnotation__Group_4__0__Impl
	rule__EdgeAnnotation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAnnotationAccess().getTokenKeyword_4_0()); }
	'token'
	{ after(grammarAccess.getEdgeAnnotationAccess().getTokenKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeAnnotation__Group_4__1__Impl
	rule__EdgeAnnotation__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAnnotationAccess().getSizeKeyword_4_1()); }
	'size'
	{ after(grammarAccess.getEdgeAnnotationAccess().getSizeKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeAnnotation__Group_4__2__Impl
	rule__EdgeAnnotation__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAnnotationAccess().getColonKeyword_4_2()); }
	':'
	{ after(grammarAccess.getEdgeAnnotationAccess().getColonKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeAnnotation__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAnnotationAccess().getTokensizeAssignment_4_3()); }
	(rule__EdgeAnnotation__TokensizeAssignment_4_3)
	{ after(grammarAccess.getEdgeAnnotationAccess().getTokensizeAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__0__Impl
	rule__Actor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getNameAssignment_0()); }
	(rule__Actor__NameAssignment_0)
	{ after(grammarAccess.getActorAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getSpecsAssignment_1()); }
	(rule__Actor__SpecsAssignment_1)?
	{ after(grammarAccess.getActorAccess().getSpecsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActorSpecs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorSpecs__Group__0__Impl
	rule__ActorSpecs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorSpecs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorSpecsAccess().getActorSpecsAction_0()); }
	()
	{ after(grammarAccess.getActorSpecsAccess().getActorSpecsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorSpecs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorSpecs__Group__1__Impl
	rule__ActorSpecs__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorSpecs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorSpecsAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getActorSpecsAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorSpecs__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorSpecs__Group__2__Impl
	rule__ActorSpecs__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorSpecs__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorSpecsAccess().getAnnotationsAssignment_2()); }
	(rule__ActorSpecs__AnnotationsAssignment_2)
	{ after(grammarAccess.getActorSpecsAccess().getAnnotationsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorSpecs__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorSpecs__Group__3__Impl
	rule__ActorSpecs__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorSpecs__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorSpecsAccess().getGroup_3()); }
	(rule__ActorSpecs__Group_3__0)*
	{ after(grammarAccess.getActorSpecsAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorSpecs__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorSpecs__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorSpecs__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorSpecsAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getActorSpecsAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActorSpecs__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorSpecs__Group_3__0__Impl
	rule__ActorSpecs__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorSpecs__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorSpecsAccess().getSemicolonKeyword_3_0()); }
	';'
	{ after(grammarAccess.getActorSpecsAccess().getSemicolonKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorSpecs__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorSpecs__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorSpecs__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorSpecsAccess().getAnnotationsAssignment_3_1()); }
	(rule__ActorSpecs__AnnotationsAssignment_3_1)
	{ after(grammarAccess.getActorSpecsAccess().getAnnotationsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActorAnnotation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorAnnotation__Group__0__Impl
	rule__ActorAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAnnotation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAnnotationAccess().getGroup_0()); }
	(rule__ActorAnnotation__Group_0__0)?
	{ after(grammarAccess.getActorAnnotationAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAnnotation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorAnnotation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAnnotation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAnnotationAccess().getExecutiontimeAssignment_1()); }
	(rule__ActorAnnotation__ExecutiontimeAssignment_1)
	{ after(grammarAccess.getActorAnnotationAccess().getExecutiontimeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActorAnnotation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorAnnotation__Group_0__0__Impl
	rule__ActorAnnotation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAnnotation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAnnotationAccess().getExecutionKeyword_0_0()); }
	'execution'
	{ after(grammarAccess.getActorAnnotationAccess().getExecutionKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAnnotation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorAnnotation__Group_0__1__Impl
	rule__ActorAnnotation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAnnotation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAnnotationAccess().getTimeKeyword_0_1()); }
	'time'
	{ after(grammarAccess.getActorAnnotationAccess().getTimeKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAnnotation__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorAnnotation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAnnotation__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAnnotationAccess().getColonKeyword_0_2()); }
	':'
	{ after(grammarAccess.getActorAnnotationAccess().getColonKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InputSignals__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputSignals__Group__0__Impl
	rule__InputSignals__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSignals__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputSignalsAccess().getInputKeyword_0()); }
	'input'
	{ after(grammarAccess.getInputSignalsAccess().getInputKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSignals__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputSignals__Group__1__Impl
	rule__InputSignals__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSignals__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputSignalsAccess().getSignalsKeyword_1()); }
	'signals'
	{ after(grammarAccess.getInputSignalsAccess().getSignalsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSignals__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputSignals__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSignals__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getInputSignalsAccess().getSignalsAssignment_2()); }
		(rule__InputSignals__SignalsAssignment_2)
		{ after(grammarAccess.getInputSignalsAccess().getSignalsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getInputSignalsAccess().getSignalsAssignment_2()); }
		(rule__InputSignals__SignalsAssignment_2)*
		{ after(grammarAccess.getInputSignalsAccess().getSignalsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group__0__Impl
	rule__Signal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getNameAssignment_0()); }
	(rule__Signal__NameAssignment_0)
	{ after(grammarAccess.getSignalAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group__1__Impl
	rule__Signal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getSignalAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group__2__Impl
	rule__Signal__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getSignalAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group__3__Impl
	rule__Signal__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getGroup_3()); }
	(rule__Signal__Group_3__0)?
	{ after(grammarAccess.getSignalAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getSignalAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group_3__0__Impl
	rule__Signal__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getTimestampsAssignment_3_0()); }
	(rule__Signal__TimestampsAssignment_3_0)
	{ after(grammarAccess.getSignalAccess().getTimestampsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getGroup_3_1()); }
	(rule__Signal__Group_3_1__0)*
	{ after(grammarAccess.getSignalAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group_3_1__0__Impl
	rule__Signal__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getSignalAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getTimestampsAssignment_3_1_1()); }
	(rule__Signal__TimestampsAssignment_3_1_1)
	{ after(grammarAccess.getSignalAccess().getTimestampsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ratio__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ratio__Group__0__Impl
	rule__Ratio__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ratio__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRatioAccess().getNumeratorAssignment_0()); }
	(rule__Ratio__NumeratorAssignment_0)
	{ after(grammarAccess.getRatioAccess().getNumeratorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ratio__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ratio__Group__1__Impl
	rule__Ratio__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ratio__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRatioAccess().getSolidusKeyword_1()); }
	'/'
	{ after(grammarAccess.getRatioAccess().getSolidusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ratio__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ratio__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ratio__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRatioAccess().getDenominatorAssignment_2()); }
	(rule__Ratio__DenominatorAssignment_2)
	{ after(grammarAccess.getRatioAccess().getDenominatorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowModel__AuthorAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataflowModelAccess().getAuthorIDTerminalRuleCall_0_2_0()); }
		RULE_ID
		{ after(grammarAccess.getDataflowModelAccess().getAuthorIDTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataflowModelAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getDataflowModelAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__InputsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataflowModelAccess().getInputsInputParserRuleCall_5_1_0()); }
		ruleInput
		{ after(grammarAccess.getDataflowModelAccess().getInputsInputParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__InputsAssignment_5_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataflowModelAccess().getInputsInputParserRuleCall_5_2_1_0()); }
		ruleInput
		{ after(grammarAccess.getDataflowModelAccess().getInputsInputParserRuleCall_5_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__OutputsAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataflowModelAccess().getOutputsOutputParserRuleCall_6_1_0()); }
		ruleOutput
		{ after(grammarAccess.getDataflowModelAccess().getOutputsOutputParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__OutputsAssignment_6_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataflowModelAccess().getOutputsOutputParserRuleCall_6_2_1_0()); }
		ruleOutput
		{ after(grammarAccess.getDataflowModelAccess().getOutputsOutputParserRuleCall_6_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__EdgesAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataflowModelAccess().getEdgesEdgeParserRuleCall_7_0()); }
		ruleEdge
		{ after(grammarAccess.getDataflowModelAccess().getEdgesEdgeParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowModel__InputsignalsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataflowModelAccess().getInputsignalsInputSignalsParserRuleCall_9_0()); }
		ruleInputSignals
		{ after(grammarAccess.getDataflowModelAccess().getInputsignalsInputSignalsParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__SrcactAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeAccess().getSrcactActorParserRuleCall_0_0_0()); }
		ruleActor
		{ after(grammarAccess.getEdgeAccess().getSrcactActorParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__DstactAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeAccess().getDstactActorParserRuleCall_0_3_0()); }
		ruleActor
		{ after(grammarAccess.getEdgeAccess().getDstactActorParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__SrcactAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeAccess().getSrcactActorParserRuleCall_1_0_0()); }
		ruleActor
		{ after(grammarAccess.getEdgeAccess().getSrcactActorParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__SpecsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeAccess().getSpecsEdgeSpecsParserRuleCall_1_2_0()); }
		ruleEdgeSpecs
		{ after(grammarAccess.getEdgeAccess().getSpecsEdgeSpecsParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__DstactAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeAccess().getDstactActorParserRuleCall_1_5_0()); }
		ruleActor
		{ after(grammarAccess.getEdgeAccess().getDstactActorParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeSpecs__AnnotationsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeSpecsAccess().getAnnotationsEdgeAnnotationParserRuleCall_1_0()); }
		ruleEdgeAnnotation
		{ after(grammarAccess.getEdgeSpecsAccess().getAnnotationsEdgeAnnotationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeSpecs__AnnotationsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeSpecsAccess().getAnnotationsEdgeAnnotationParserRuleCall_2_1_0()); }
		ruleEdgeAnnotation
		{ after(grammarAccess.getEdgeSpecsAccess().getAnnotationsEdgeAnnotationParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__InitialtokensAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeAnnotationAccess().getInitialtokensINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getEdgeAnnotationAccess().getInitialtokensINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__ProdrateAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeAnnotationAccess().getProdrateINTTerminalRuleCall_1_3_0()); }
		RULE_INT
		{ after(grammarAccess.getEdgeAnnotationAccess().getProdrateINTTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__ConsrateAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeAnnotationAccess().getConsrateINTTerminalRuleCall_2_3_0()); }
		RULE_INT
		{ after(grammarAccess.getEdgeAnnotationAccess().getConsrateINTTerminalRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__NameAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeAnnotationAccess().getNameIDTerminalRuleCall_3_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEdgeAnnotationAccess().getNameIDTerminalRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeAnnotation__TokensizeAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeAnnotationAccess().getTokensizeINTTerminalRuleCall_4_3_0()); }
		RULE_INT
		{ after(grammarAccess.getEdgeAnnotationAccess().getTokensizeINTTerminalRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__SpecsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getSpecsActorSpecsParserRuleCall_1_0()); }
		ruleActorSpecs
		{ after(grammarAccess.getActorAccess().getSpecsActorSpecsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorSpecs__AnnotationsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorSpecsAccess().getAnnotationsActorAnnotationParserRuleCall_2_0()); }
		ruleActorAnnotation
		{ after(grammarAccess.getActorSpecsAccess().getAnnotationsActorAnnotationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorSpecs__AnnotationsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorSpecsAccess().getAnnotationsActorAnnotationParserRuleCall_3_1_0()); }
		ruleActorAnnotation
		{ after(grammarAccess.getActorSpecsAccess().getAnnotationsActorAnnotationParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAnnotation__ExecutiontimeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAnnotationAccess().getExecutiontimeNumberParserRuleCall_1_0()); }
		ruleNumber
		{ after(grammarAccess.getActorAnnotationAccess().getExecutiontimeNumberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSignals__SignalsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputSignalsAccess().getSignalsSignalParserRuleCall_2_0()); }
		ruleSignal
		{ after(grammarAccess.getInputSignalsAccess().getSignalsSignalParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__TimestampsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignalAccess().getTimestampsTimeStampParserRuleCall_3_0_0()); }
		ruleTimeStamp
		{ after(grammarAccess.getSignalAccess().getTimestampsTimeStampParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__TimestampsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignalAccess().getTimestampsTimeStampParserRuleCall_3_1_1_0()); }
		ruleTimeStamp
		{ after(grammarAccess.getSignalAccess().getTimestampsTimeStampParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__RatioAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getRatioRatioParserRuleCall_0_0()); }
		ruleRatio
		{ after(grammarAccess.getNumberAccess().getRatioRatioParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getValueAlternatives_1_0()); }
		(rule__Number__ValueAlternatives_1_0)
		{ after(grammarAccess.getNumberAccess().getValueAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ratio__NumeratorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRatioAccess().getNumeratorPNIntParserRuleCall_0_0()); }
		rulePNInt
		{ after(grammarAccess.getRatioAccess().getNumeratorPNIntParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ratio__DenominatorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRatioAccess().getDenominatorINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getRatioAccess().getDenominatorINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getInputAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getOutputAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_NINT : '-' RULE_INT;

RULE_FLOAT : '-'? RULE_INT? '.' RULE_INT (('E'|'e') '-'? RULE_INT)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
