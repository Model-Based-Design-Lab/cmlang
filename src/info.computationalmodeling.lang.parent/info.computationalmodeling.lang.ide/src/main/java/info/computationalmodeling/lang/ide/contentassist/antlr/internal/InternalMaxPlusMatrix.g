/*
 * generated by Xtext 2.29.0
 */
grammar InternalMaxPlusMatrix;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package info.computationalmodeling.lang.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package info.computationalmodeling.lang.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import info.computationalmodeling.lang.services.MaxPlusMatrixGrammarAccess;

}
@parser::members {
	private MaxPlusMatrixGrammarAccess grammarAccess;

	public void setGrammarAccess(MaxPlusMatrixGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMaxPlusMatrixModel
entryRuleMaxPlusMatrixModel
:
{ before(grammarAccess.getMaxPlusMatrixModelRule()); }
	 ruleMaxPlusMatrixModel
{ after(grammarAccess.getMaxPlusMatrixModelRule()); } 
	 EOF 
;

// Rule MaxPlusMatrixModel
ruleMaxPlusMatrixModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaxPlusMatrixModelAccess().getGroup()); }
		(rule__MaxPlusMatrixModel__Group__0)
		{ after(grammarAccess.getMaxPlusMatrixModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMaxPlusMatrix
entryRuleMaxPlusMatrix
:
{ before(grammarAccess.getMaxPlusMatrixRule()); }
	 ruleMaxPlusMatrix
{ after(grammarAccess.getMaxPlusMatrixRule()); } 
	 EOF 
;

// Rule MaxPlusMatrix
ruleMaxPlusMatrix 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaxPlusMatrixAccess().getGroup()); }
		(rule__MaxPlusMatrix__Group__0)
		{ after(grammarAccess.getMaxPlusMatrixAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRow
entryRuleRow
:
{ before(grammarAccess.getRowRule()); }
	 ruleRow
{ after(grammarAccess.getRowRule()); } 
	 EOF 
;

// Rule Row
ruleRow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRowAccess().getGroup()); }
		(rule__Row__Group__0)
		{ after(grammarAccess.getRowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVectorSequence
entryRuleVectorSequence
:
{ before(grammarAccess.getVectorSequenceRule()); }
	 ruleVectorSequence
{ after(grammarAccess.getVectorSequenceRule()); } 
	 EOF 
;

// Rule VectorSequence
ruleVectorSequence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVectorSequenceAccess().getGroup()); }
		(rule__VectorSequence__Group__0)
		{ after(grammarAccess.getVectorSequenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEventSequence
entryRuleEventSequence
:
{ before(grammarAccess.getEventSequenceRule()); }
	 ruleEventSequence
{ after(grammarAccess.getEventSequenceRule()); } 
	 EOF 
;

// Rule EventSequence
ruleEventSequence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventSequenceAccess().getGroup()); }
		(rule__EventSequence__Group__0)
		{ after(grammarAccess.getEventSequenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabels
entryRuleLabels
:
{ before(grammarAccess.getLabelsRule()); }
	 ruleLabels
{ after(grammarAccess.getLabelsRule()); } 
	 EOF 
;

// Rule Labels
ruleLabels 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabelsAccess().getGroup()); }
		(rule__Labels__Group__0)
		{ after(grammarAccess.getLabelsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumber
entryRuleNumber
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberAccess().getAlternatives()); }
		(rule__Number__Alternatives)
		{ after(grammarAccess.getNumberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRatio
entryRuleRatio
:
{ before(grammarAccess.getRatioRule()); }
	 ruleRatio
{ after(grammarAccess.getRatioRule()); } 
	 EOF 
;

// Rule Ratio
ruleRatio 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRatioAccess().getGroup()); }
		(rule__Ratio__Group__0)
		{ after(grammarAccess.getRatioAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePNInt
entryRulePNInt
:
{ before(grammarAccess.getPNIntRule()); }
	 rulePNInt
{ after(grammarAccess.getPNIntRule()); } 
	 EOF 
;

// Rule PNInt
rulePNInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPNIntAccess().getAlternatives()); }
		(rule__PNInt__Alternatives)
		{ after(grammarAccess.getPNIntAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getNumAssignment_0()); }
		(rule__Element__NumAssignment_0)
		{ after(grammarAccess.getElementAccess().getNumAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getInfAssignment_1()); }
		(rule__Element__InfAssignment_1)
		{ after(grammarAccess.getElementAccess().getInfAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getRatioAssignment_0()); }
		(rule__Number__RatioAssignment_0)
		{ after(grammarAccess.getNumberAccess().getRatioAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumberAccess().getValueAssignment_1()); }
		(rule__Number__ValueAssignment_1)
		{ after(grammarAccess.getNumberAccess().getValueAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ValueAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getValuePNIntParserRuleCall_1_0_0()); }
		rulePNInt
		{ after(grammarAccess.getNumberAccess().getValuePNIntParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumberAccess().getValueFloatTerminalRuleCall_1_0_1()); }
		RULE_FLOAT
		{ after(grammarAccess.getNumberAccess().getValueFloatTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PNInt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPNIntAccess().getINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getPNIntAccess().getINTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPNIntAccess().getNINTTerminalRuleCall_1()); }
		RULE_NINT
		{ after(grammarAccess.getPNIntAccess().getNINTTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrixModel__Group__0__Impl
	rule__MaxPlusMatrixModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxPlusMatrixModelAccess().getMaxPlusKeyword_0()); }
	'max-plus'
	{ after(grammarAccess.getMaxPlusMatrixModelAccess().getMaxPlusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrixModel__Group__1__Impl
	rule__MaxPlusMatrixModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxPlusMatrixModelAccess().getModelKeyword_1()); }
	'model'
	{ after(grammarAccess.getMaxPlusMatrixModelAccess().getModelKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrixModel__Group__2__Impl
	rule__MaxPlusMatrixModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxPlusMatrixModelAccess().getNameAssignment_2()); }
	(rule__MaxPlusMatrixModel__NameAssignment_2)
	{ after(grammarAccess.getMaxPlusMatrixModelAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrixModel__Group__3__Impl
	rule__MaxPlusMatrixModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxPlusMatrixModelAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getMaxPlusMatrixModelAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrixModel__Group__4__Impl
	rule__MaxPlusMatrixModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxPlusMatrixModelAccess().getGroup_4()); }
	(rule__MaxPlusMatrixModel__Group_4__0)?
	{ after(grammarAccess.getMaxPlusMatrixModelAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrixModel__Group__5__Impl
	rule__MaxPlusMatrixModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxPlusMatrixModelAccess().getGroup_5()); }
	(rule__MaxPlusMatrixModel__Group_5__0)?
	{ after(grammarAccess.getMaxPlusMatrixModelAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrixModel__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxPlusMatrixModelAccess().getGroup_6()); }
	(rule__MaxPlusMatrixModel__Group_6__0)?
	{ after(grammarAccess.getMaxPlusMatrixModelAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MaxPlusMatrixModel__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrixModel__Group_4__0__Impl
	rule__MaxPlusMatrixModel__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxPlusMatrixModelAccess().getMatricesKeyword_4_0()); }
	'matrices'
	{ after(grammarAccess.getMaxPlusMatrixModelAccess().getMatricesKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrixModel__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMaxPlusMatrixModelAccess().getMatricesAssignment_4_1()); }
		(rule__MaxPlusMatrixModel__MatricesAssignment_4_1)
		{ after(grammarAccess.getMaxPlusMatrixModelAccess().getMatricesAssignment_4_1()); }
	)
	(
		{ before(grammarAccess.getMaxPlusMatrixModelAccess().getMatricesAssignment_4_1()); }
		(rule__MaxPlusMatrixModel__MatricesAssignment_4_1)*
		{ after(grammarAccess.getMaxPlusMatrixModelAccess().getMatricesAssignment_4_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MaxPlusMatrixModel__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrixModel__Group_5__0__Impl
	rule__MaxPlusMatrixModel__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxPlusMatrixModelAccess().getVectorSequencesKeyword_5_0()); }
	'vector sequences'
	{ after(grammarAccess.getMaxPlusMatrixModelAccess().getVectorSequencesKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrixModel__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMaxPlusMatrixModelAccess().getVectorsequencesAssignment_5_1()); }
		(rule__MaxPlusMatrixModel__VectorsequencesAssignment_5_1)
		{ after(grammarAccess.getMaxPlusMatrixModelAccess().getVectorsequencesAssignment_5_1()); }
	)
	(
		{ before(grammarAccess.getMaxPlusMatrixModelAccess().getVectorsequencesAssignment_5_1()); }
		(rule__MaxPlusMatrixModel__VectorsequencesAssignment_5_1)*
		{ after(grammarAccess.getMaxPlusMatrixModelAccess().getVectorsequencesAssignment_5_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MaxPlusMatrixModel__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrixModel__Group_6__0__Impl
	rule__MaxPlusMatrixModel__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxPlusMatrixModelAccess().getEventSequencesKeyword_6_0()); }
	'event sequences'
	{ after(grammarAccess.getMaxPlusMatrixModelAccess().getEventSequencesKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrixModel__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMaxPlusMatrixModelAccess().getEventsequencesAssignment_6_1()); }
		(rule__MaxPlusMatrixModel__EventsequencesAssignment_6_1)
		{ after(grammarAccess.getMaxPlusMatrixModelAccess().getEventsequencesAssignment_6_1()); }
	)
	(
		{ before(grammarAccess.getMaxPlusMatrixModelAccess().getEventsequencesAssignment_6_1()); }
		(rule__MaxPlusMatrixModel__EventsequencesAssignment_6_1)*
		{ after(grammarAccess.getMaxPlusMatrixModelAccess().getEventsequencesAssignment_6_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MaxPlusMatrix__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrix__Group__0__Impl
	rule__MaxPlusMatrix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrix__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxPlusMatrixAccess().getNameAssignment_0()); }
	(rule__MaxPlusMatrix__NameAssignment_0)
	{ after(grammarAccess.getMaxPlusMatrixAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrix__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrix__Group__1__Impl
	rule__MaxPlusMatrix__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrix__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxPlusMatrixAccess().getLabelsAssignment_1()); }
	(rule__MaxPlusMatrix__LabelsAssignment_1)?
	{ after(grammarAccess.getMaxPlusMatrixAccess().getLabelsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrix__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrix__Group__2__Impl
	rule__MaxPlusMatrix__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrix__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxPlusMatrixAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getMaxPlusMatrixAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrix__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrix__Group__3__Impl
	rule__MaxPlusMatrix__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrix__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxPlusMatrixAccess().getLeftSquareBracketKeyword_3()); }
	'['
	{ after(grammarAccess.getMaxPlusMatrixAccess().getLeftSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrix__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrix__Group__4__Impl
	rule__MaxPlusMatrix__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrix__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxPlusMatrixAccess().getGroup_4()); }
	(rule__MaxPlusMatrix__Group_4__0)*
	{ after(grammarAccess.getMaxPlusMatrixAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrix__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrix__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrix__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxPlusMatrixAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getMaxPlusMatrixAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MaxPlusMatrix__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrix__Group_4__0__Impl
	rule__MaxPlusMatrix__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrix__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxPlusMatrixAccess().getRowsAssignment_4_0()); }
	(rule__MaxPlusMatrix__RowsAssignment_4_0)
	{ after(grammarAccess.getMaxPlusMatrixAccess().getRowsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrix__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxPlusMatrix__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrix__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxPlusMatrixAccess().getCommaKeyword_4_1()); }
	(',')?
	{ after(grammarAccess.getMaxPlusMatrixAccess().getCommaKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Row__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__0__Impl
	rule__Row__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getRowAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__1__Impl
	rule__Row__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getGroup_1()); }
	(rule__Row__Group_1__0)*
	{ after(grammarAccess.getRowAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getRowAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Row__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group_1__0__Impl
	rule__Row__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getElementsAssignment_1_0()); }
	(rule__Row__ElementsAssignment_1_0)
	{ after(grammarAccess.getRowAccess().getElementsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getCommaKeyword_1_1()); }
	(',')?
	{ after(grammarAccess.getRowAccess().getCommaKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VectorSequence__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VectorSequence__Group__0__Impl
	rule__VectorSequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorSequence__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVectorSequenceAccess().getNameAssignment_0()); }
	(rule__VectorSequence__NameAssignment_0)
	{ after(grammarAccess.getVectorSequenceAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorSequence__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VectorSequence__Group__1__Impl
	rule__VectorSequence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorSequence__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVectorSequenceAccess().getLabelsAssignment_1()); }
	(rule__VectorSequence__LabelsAssignment_1)?
	{ after(grammarAccess.getVectorSequenceAccess().getLabelsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorSequence__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VectorSequence__Group__2__Impl
	rule__VectorSequence__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorSequence__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVectorSequenceAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getVectorSequenceAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorSequence__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VectorSequence__Group__3__Impl
	rule__VectorSequence__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorSequence__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVectorSequenceAccess().getLeftSquareBracketKeyword_3()); }
	'['
	{ after(grammarAccess.getVectorSequenceAccess().getLeftSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorSequence__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VectorSequence__Group__4__Impl
	rule__VectorSequence__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorSequence__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVectorSequenceAccess().getGroup_4()); }
	(rule__VectorSequence__Group_4__0)*
	{ after(grammarAccess.getVectorSequenceAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorSequence__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VectorSequence__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorSequence__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVectorSequenceAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getVectorSequenceAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VectorSequence__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VectorSequence__Group_4__0__Impl
	rule__VectorSequence__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorSequence__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVectorSequenceAccess().getVectorsAssignment_4_0()); }
	(rule__VectorSequence__VectorsAssignment_4_0)
	{ after(grammarAccess.getVectorSequenceAccess().getVectorsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorSequence__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VectorSequence__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorSequence__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVectorSequenceAccess().getCommaKeyword_4_1()); }
	(',')?
	{ after(grammarAccess.getVectorSequenceAccess().getCommaKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventSequence__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventSequence__Group__0__Impl
	rule__EventSequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSequence__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventSequenceAccess().getNameAssignment_0()); }
	(rule__EventSequence__NameAssignment_0)
	{ after(grammarAccess.getEventSequenceAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSequence__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventSequence__Group__1__Impl
	rule__EventSequence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSequence__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventSequenceAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getEventSequenceAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSequence__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventSequence__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSequence__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventSequenceAccess().getSequenceAssignment_2()); }
	(rule__EventSequence__SequenceAssignment_2)
	{ after(grammarAccess.getEventSequenceAccess().getSequenceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Labels__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labels__Group__0__Impl
	rule__Labels__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Labels__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelsAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getLabelsAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labels__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labels__Group__1__Impl
	rule__Labels__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Labels__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getLabelsAccess().getGroup_1()); }
		(rule__Labels__Group_1__0)
		{ after(grammarAccess.getLabelsAccess().getGroup_1()); }
	)
	(
		{ before(grammarAccess.getLabelsAccess().getGroup_1()); }
		(rule__Labels__Group_1__0)*
		{ after(grammarAccess.getLabelsAccess().getGroup_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labels__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labels__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Labels__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelsAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getLabelsAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Labels__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labels__Group_1__0__Impl
	rule__Labels__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Labels__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelsAccess().getLabelAssignment_1_0()); }
	(rule__Labels__LabelAssignment_1_0)
	{ after(grammarAccess.getLabelsAccess().getLabelAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labels__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labels__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Labels__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelsAccess().getCommaKeyword_1_1()); }
	(',')?
	{ after(grammarAccess.getLabelsAccess().getCommaKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ratio__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ratio__Group__0__Impl
	rule__Ratio__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ratio__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRatioAccess().getNumeratorAssignment_0()); }
	(rule__Ratio__NumeratorAssignment_0)
	{ after(grammarAccess.getRatioAccess().getNumeratorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ratio__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ratio__Group__1__Impl
	rule__Ratio__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ratio__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRatioAccess().getSolidusKeyword_1()); }
	'/'
	{ after(grammarAccess.getRatioAccess().getSolidusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ratio__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ratio__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ratio__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRatioAccess().getDenominatorAssignment_2()); }
	(rule__Ratio__DenominatorAssignment_2)
	{ after(grammarAccess.getRatioAccess().getDenominatorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MaxPlusMatrixModel__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaxPlusMatrixModelAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getMaxPlusMatrixModelAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__MatricesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaxPlusMatrixModelAccess().getMatricesMaxPlusMatrixParserRuleCall_4_1_0()); }
		ruleMaxPlusMatrix
		{ after(grammarAccess.getMaxPlusMatrixModelAccess().getMatricesMaxPlusMatrixParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__VectorsequencesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaxPlusMatrixModelAccess().getVectorsequencesVectorSequenceParserRuleCall_5_1_0()); }
		ruleVectorSequence
		{ after(grammarAccess.getMaxPlusMatrixModelAccess().getVectorsequencesVectorSequenceParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrixModel__EventsequencesAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaxPlusMatrixModelAccess().getEventsequencesEventSequenceParserRuleCall_6_1_0()); }
		ruleEventSequence
		{ after(grammarAccess.getMaxPlusMatrixModelAccess().getEventsequencesEventSequenceParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrix__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaxPlusMatrixAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getMaxPlusMatrixAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrix__LabelsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaxPlusMatrixAccess().getLabelsLabelsParserRuleCall_1_0()); }
		ruleLabels
		{ after(grammarAccess.getMaxPlusMatrixAccess().getLabelsLabelsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxPlusMatrix__RowsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaxPlusMatrixAccess().getRowsRowParserRuleCall_4_0_0()); }
		ruleRow
		{ after(grammarAccess.getMaxPlusMatrixAccess().getRowsRowParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__ElementsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRowAccess().getElementsElementParserRuleCall_1_0_0()); }
		ruleElement
		{ after(grammarAccess.getRowAccess().getElementsElementParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorSequence__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVectorSequenceAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVectorSequenceAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorSequence__LabelsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVectorSequenceAccess().getLabelsLabelsParserRuleCall_1_0()); }
		ruleLabels
		{ after(grammarAccess.getVectorSequenceAccess().getLabelsLabelsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorSequence__VectorsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVectorSequenceAccess().getVectorsRowParserRuleCall_4_0_0()); }
		ruleRow
		{ after(grammarAccess.getVectorSequenceAccess().getVectorsRowParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSequence__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventSequenceAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEventSequenceAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSequence__SequenceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventSequenceAccess().getSequenceRowParserRuleCall_2_0()); }
		ruleRow
		{ after(grammarAccess.getEventSequenceAccess().getSequenceRowParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labels__LabelAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelsAccess().getLabelIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getLabelsAccess().getLabelIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__NumAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getNumNumberParserRuleCall_0_0()); }
		ruleNumber
		{ after(grammarAccess.getElementAccess().getNumNumberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__InfAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getInfInfKeyword_1_0()); }
		(
			{ before(grammarAccess.getElementAccess().getInfInfKeyword_1_0()); }
			'-inf'
			{ after(grammarAccess.getElementAccess().getInfInfKeyword_1_0()); }
		)
		{ after(grammarAccess.getElementAccess().getInfInfKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__RatioAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getRatioRatioParserRuleCall_0_0()); }
		ruleRatio
		{ after(grammarAccess.getNumberAccess().getRatioRatioParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getValueAlternatives_1_0()); }
		(rule__Number__ValueAlternatives_1_0)
		{ after(grammarAccess.getNumberAccess().getValueAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ratio__NumeratorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRatioAccess().getNumeratorPNIntParserRuleCall_0_0()); }
		rulePNInt
		{ after(grammarAccess.getRatioAccess().getNumeratorPNIntParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ratio__DenominatorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRatioAccess().getDenominatorINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getRatioAccess().getDenominatorINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_NINT : '-' RULE_INT;

RULE_FLOAT : '-'? RULE_INT? '.' RULE_INT (('E'|'e') '-'? RULE_INT)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
