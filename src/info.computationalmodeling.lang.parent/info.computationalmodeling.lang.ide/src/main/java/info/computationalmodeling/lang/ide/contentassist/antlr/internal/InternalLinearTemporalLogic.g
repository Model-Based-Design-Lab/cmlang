/*
 * generated by Xtext 2.29.0
 */
grammar InternalLinearTemporalLogic;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package info.computationalmodeling.lang.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package info.computationalmodeling.lang.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import info.computationalmodeling.lang.services.LinearTemporalLogicGrammarAccess;

}
@parser::members {
	private LinearTemporalLogicGrammarAccess grammarAccess;

	public void setGrammarAccess(LinearTemporalLogicGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleLTLModel
entryRuleLTLModel
:
{ before(grammarAccess.getLTLModelRule()); }
	 ruleLTLModel
{ after(grammarAccess.getLTLModelRule()); } 
	 EOF 
;

// Rule LTLModel
ruleLTLModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLTLModelAccess().getGroup()); }
		(rule__LTLModel__Group__0)
		{ after(grammarAccess.getLTLModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinition
entryRuleDefinition
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionAccess().getGroup()); }
		(rule__Definition__Group__0)
		{ after(grammarAccess.getDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetOfSymbols
entryRuleSetOfSymbols
:
{ before(grammarAccess.getSetOfSymbolsRule()); }
	 ruleSetOfSymbols
{ after(grammarAccess.getSetOfSymbolsRule()); } 
	 EOF 
;

// Rule SetOfSymbols
ruleSetOfSymbols 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetOfSymbolsAccess().getGroup()); }
		(rule__SetOfSymbols__Group__0)
		{ after(grammarAccess.getSetOfSymbolsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLTLFormula
entryRuleLTLFormula
:
{ before(grammarAccess.getLTLFormulaRule()); }
	 ruleLTLFormula
{ after(grammarAccess.getLTLFormulaRule()); } 
	 EOF 
;

// Rule LTLFormula
ruleLTLFormula 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLTLFormulaAccess().getGroup()); }
		(rule__LTLFormula__Group__0)
		{ after(grammarAccess.getLTLFormulaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLTLFormula1
entryRuleLTLFormula1
:
{ before(grammarAccess.getLTLFormula1Rule()); }
	 ruleLTLFormula1
{ after(grammarAccess.getLTLFormula1Rule()); } 
	 EOF 
;

// Rule LTLFormula1
ruleLTLFormula1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLTLFormula1Access().getGroup()); }
		(rule__LTLFormula1__Group__0)
		{ after(grammarAccess.getLTLFormula1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLTLFormula2
entryRuleLTLFormula2
:
{ before(grammarAccess.getLTLFormula2Rule()); }
	 ruleLTLFormula2
{ after(grammarAccess.getLTLFormula2Rule()); } 
	 EOF 
;

// Rule LTLFormula2
ruleLTLFormula2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLTLFormula2Access().getGroup()); }
		(rule__LTLFormula2__Group__0)
		{ after(grammarAccess.getLTLFormula2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLTLFormula3
entryRuleLTLFormula3
:
{ before(grammarAccess.getLTLFormula3Rule()); }
	 ruleLTLFormula3
{ after(grammarAccess.getLTLFormula3Rule()); } 
	 EOF 
;

// Rule LTLFormula3
ruleLTLFormula3 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLTLFormula3Access().getGroup()); }
		(rule__LTLFormula3__Group__0)
		{ after(grammarAccess.getLTLFormula3Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLTLFormula4
entryRuleLTLFormula4
:
{ before(grammarAccess.getLTLFormula4Rule()); }
	 ruleLTLFormula4
{ after(grammarAccess.getLTLFormula4Rule()); } 
	 EOF 
;

// Rule LTLFormula4
ruleLTLFormula4 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLTLFormula4Access().getGroup()); }
		(rule__LTLFormula4__Group__0)
		{ after(grammarAccess.getLTLFormula4Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLTLFormula5
entryRuleLTLFormula5
:
{ before(grammarAccess.getLTLFormula5Rule()); }
	 ruleLTLFormula5
{ after(grammarAccess.getLTLFormula5Rule()); } 
	 EOF 
;

// Rule LTLFormula5
ruleLTLFormula5 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLTLFormula5Access().getAlternatives()); }
		(rule__LTLFormula5__Alternatives)
		{ after(grammarAccess.getLTLFormula5Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLTLFormula6
entryRuleLTLFormula6
:
{ before(grammarAccess.getLTLFormula6Rule()); }
	 ruleLTLFormula6
{ after(grammarAccess.getLTLFormula6Rule()); } 
	 EOF 
;

// Rule LTLFormula6
ruleLTLFormula6 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLTLFormula6Access().getAlternatives()); }
		(rule__LTLFormula6__Alternatives)
		{ after(grammarAccess.getLTLFormula6Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropositionExpression
entryRulePropositionExpression
:
{ before(grammarAccess.getPropositionExpressionRule()); }
	 rulePropositionExpression
{ after(grammarAccess.getPropositionExpressionRule()); } 
	 EOF 
;

// Rule PropositionExpression
rulePropositionExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropositionExpressionAccess().getPropositionParserRuleCall()); }
		ruleProposition
		{ after(grammarAccess.getPropositionExpressionAccess().getPropositionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProposition
entryRuleProposition
:
{ before(grammarAccess.getPropositionRule()); }
	 ruleProposition
{ after(grammarAccess.getPropositionRule()); } 
	 EOF 
;

// Rule Proposition
ruleProposition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropositionAccess().getAlternatives()); }
		(rule__Proposition__Alternatives)
		{ after(grammarAccess.getPropositionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula5__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormula5Access().getGroup_0()); }
		(rule__LTLFormula5__Group_0__0)
		{ after(grammarAccess.getLTLFormula5Access().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLTLFormula5Access().getGroup_1()); }
		(rule__LTLFormula5__Group_1__0)
		{ after(grammarAccess.getLTLFormula5Access().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getLTLFormula5Access().getGroup_2()); }
		(rule__LTLFormula5__Group_2__0)
		{ after(grammarAccess.getLTLFormula5Access().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getLTLFormula5Access().getGroup_3()); }
		(rule__LTLFormula5__Group_3__0)
		{ after(grammarAccess.getLTLFormula5Access().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getLTLFormula5Access().getSubexpressionAssignment_4()); }
		(rule__LTLFormula5__SubexpressionAssignment_4)
		{ after(grammarAccess.getLTLFormula5Access().getSubexpressionAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula6__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormula6Access().getPropositionExpressionAssignment_0()); }
		(rule__LTLFormula6__PropositionExpressionAssignment_0)
		{ after(grammarAccess.getLTLFormula6Access().getPropositionExpressionAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLTLFormula6Access().getTrueExpressionAssignment_1()); }
		(rule__LTLFormula6__TrueExpressionAssignment_1)
		{ after(grammarAccess.getLTLFormula6Access().getTrueExpressionAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getLTLFormula6Access().getFalseExpressionAssignment_2()); }
		(rule__LTLFormula6__FalseExpressionAssignment_2)
		{ after(grammarAccess.getLTLFormula6Access().getFalseExpressionAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getLTLFormula6Access().getGroup_3()); }
		(rule__LTLFormula6__Group_3__0)
		{ after(grammarAccess.getLTLFormula6Access().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropositionAccess().getLTLIDTerminalRuleCall_0()); }
		RULE_LTLID
		{ after(grammarAccess.getPropositionAccess().getLTLIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropositionAccess().getSTRINGTerminalRuleCall_1()); }
		RULE_STRING
		{ after(grammarAccess.getPropositionAccess().getSTRINGTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLModel__Group__0__Impl
	rule__LTLModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLModelAccess().getLtlKeyword_0()); }
	'ltl'
	{ after(grammarAccess.getLTLModelAccess().getLtlKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLModel__Group__1__Impl
	rule__LTLModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLModelAccess().getFormulaKeyword_1()); }
	'formula'
	{ after(grammarAccess.getLTLModelAccess().getFormulaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLModel__Group__2__Impl
	rule__LTLModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLModelAccess().getNameAssignment_2()); }
	(rule__LTLModel__NameAssignment_2)
	{ after(grammarAccess.getLTLModelAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLModel__Group__3__Impl
	rule__LTLModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLModelAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getLTLModelAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLModel__Group__4__Impl
	rule__LTLModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLModelAccess().getFormulaAssignment_4()); }
	(rule__LTLModel__FormulaAssignment_4)
	{ after(grammarAccess.getLTLModelAccess().getFormulaAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLModel__Group__5__Impl
	rule__LTLModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLModelAccess().getGroup_5()); }
	(rule__LTLModel__Group_5__0)?
	{ after(grammarAccess.getLTLModelAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLModel__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLModelAccess().getGroup_6()); }
	(rule__LTLModel__Group_6__0)?
	{ after(grammarAccess.getLTLModelAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTLModel__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLModel__Group_5__0__Impl
	rule__LTLModel__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLModelAccess().getAlphabetKeyword_5_0()); }
	'alphabet'
	{ after(grammarAccess.getLTLModelAccess().getAlphabetKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLModel__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLModelAccess().getAlphabetAssignment_5_1()); }
	(rule__LTLModel__AlphabetAssignment_5_1)
	{ after(grammarAccess.getLTLModelAccess().getAlphabetAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTLModel__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLModel__Group_6__0__Impl
	rule__LTLModel__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLModelAccess().getWhereKeyword_6_0()); }
	'where'
	{ after(grammarAccess.getLTLModelAccess().getWhereKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLModel__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLModelAccess().getDefinitionsAssignment_6_1()); }
	(rule__LTLModel__DefinitionsAssignment_6_1)*
	{ after(grammarAccess.getLTLModelAccess().getDefinitionsAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__0__Impl
	rule__Definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getPropositionAssignment_0()); }
	(rule__Definition__PropositionAssignment_0)
	{ after(grammarAccess.getDefinitionAccess().getPropositionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__1__Impl
	rule__Definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getDefinitionAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getSymbolsAssignment_2()); }
	(rule__Definition__SymbolsAssignment_2)
	{ after(grammarAccess.getDefinitionAccess().getSymbolsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetOfSymbols__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetOfSymbols__Group__0__Impl
	rule__SetOfSymbols__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOfSymbols__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetOfSymbolsAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getSetOfSymbolsAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOfSymbols__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetOfSymbols__Group__1__Impl
	rule__SetOfSymbols__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOfSymbols__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetOfSymbolsAccess().getSymbolsAssignment_1()); }
	(rule__SetOfSymbols__SymbolsAssignment_1)
	{ after(grammarAccess.getSetOfSymbolsAccess().getSymbolsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOfSymbols__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetOfSymbols__Group__2__Impl
	rule__SetOfSymbols__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOfSymbols__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetOfSymbolsAccess().getGroup_2()); }
	(rule__SetOfSymbols__Group_2__0)*
	{ after(grammarAccess.getSetOfSymbolsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOfSymbols__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetOfSymbols__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOfSymbols__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetOfSymbolsAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getSetOfSymbolsAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetOfSymbols__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetOfSymbols__Group_2__0__Impl
	rule__SetOfSymbols__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOfSymbols__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetOfSymbolsAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getSetOfSymbolsAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOfSymbols__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetOfSymbols__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOfSymbols__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetOfSymbolsAccess().getSymbolsAssignment_2_1()); }
	(rule__SetOfSymbols__SymbolsAssignment_2_1)
	{ after(grammarAccess.getSetOfSymbolsAccess().getSymbolsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTLFormula__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula__Group__0__Impl
	rule__LTLFormula__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormulaAccess().getFormulaAssignment_0()); }
	(rule__LTLFormula__FormulaAssignment_0)
	{ after(grammarAccess.getLTLFormulaAccess().getFormulaAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormulaAccess().getGroup_1()); }
	(rule__LTLFormula__Group_1__0)?
	{ after(grammarAccess.getLTLFormulaAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTLFormula__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula__Group_1__0__Impl
	rule__LTLFormula__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormulaAccess().getOrKeyword_1_0()); }
	'or'
	{ after(grammarAccess.getLTLFormulaAccess().getOrKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula__Group_1__1__Impl
	rule__LTLFormula__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormulaAccess().getAlternativesAssignment_1_1()); }
	(rule__LTLFormula__AlternativesAssignment_1_1)
	{ after(grammarAccess.getLTLFormulaAccess().getAlternativesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormulaAccess().getGroup_1_2()); }
	(rule__LTLFormula__Group_1_2__0)*
	{ after(grammarAccess.getLTLFormulaAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTLFormula__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula__Group_1_2__0__Impl
	rule__LTLFormula__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormulaAccess().getOrKeyword_1_2_0()); }
	'or'
	{ after(grammarAccess.getLTLFormulaAccess().getOrKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormulaAccess().getAlternativesAssignment_1_2_1()); }
	(rule__LTLFormula__AlternativesAssignment_1_2_1)
	{ after(grammarAccess.getLTLFormulaAccess().getAlternativesAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTLFormula1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula1__Group__0__Impl
	rule__LTLFormula1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula1Access().getFormulaAssignment_0()); }
	(rule__LTLFormula1__FormulaAssignment_0)
	{ after(grammarAccess.getLTLFormula1Access().getFormulaAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula1Access().getGroup_1()); }
	(rule__LTLFormula1__Group_1__0)?
	{ after(grammarAccess.getLTLFormula1Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTLFormula1__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula1__Group_1__0__Impl
	rule__LTLFormula1__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula1__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula1Access().getAndKeyword_1_0()); }
	'and'
	{ after(grammarAccess.getLTLFormula1Access().getAndKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula1__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula1__Group_1__1__Impl
	rule__LTLFormula1__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula1__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula1Access().getAlternativesAssignment_1_1()); }
	(rule__LTLFormula1__AlternativesAssignment_1_1)
	{ after(grammarAccess.getLTLFormula1Access().getAlternativesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula1__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula1__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula1__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula1Access().getGroup_1_2()); }
	(rule__LTLFormula1__Group_1_2__0)*
	{ after(grammarAccess.getLTLFormula1Access().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTLFormula1__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula1__Group_1_2__0__Impl
	rule__LTLFormula1__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula1__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula1Access().getAndKeyword_1_2_0()); }
	'and'
	{ after(grammarAccess.getLTLFormula1Access().getAndKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula1__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula1__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula1__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula1Access().getAlternativesAssignment_1_2_1()); }
	(rule__LTLFormula1__AlternativesAssignment_1_2_1)
	{ after(grammarAccess.getLTLFormula1Access().getAlternativesAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTLFormula2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula2__Group__0__Impl
	rule__LTLFormula2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula2Access().getSubexpression1Assignment_0()); }
	(rule__LTLFormula2__Subexpression1Assignment_0)
	{ after(grammarAccess.getLTLFormula2Access().getSubexpression1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula2Access().getGroup_1()); }
	(rule__LTLFormula2__Group_1__0)?
	{ after(grammarAccess.getLTLFormula2Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTLFormula2__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula2__Group_1__0__Impl
	rule__LTLFormula2__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula2__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula2Access().getUKeyword_1_0()); }
	'U'
	{ after(grammarAccess.getLTLFormula2Access().getUKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula2__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula2__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula2__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula2Access().getSubexpression2Assignment_1_1()); }
	(rule__LTLFormula2__Subexpression2Assignment_1_1)
	{ after(grammarAccess.getLTLFormula2Access().getSubexpression2Assignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTLFormula3__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula3__Group__0__Impl
	rule__LTLFormula3__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula3__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula3Access().getSubexpression1Assignment_0()); }
	(rule__LTLFormula3__Subexpression1Assignment_0)
	{ after(grammarAccess.getLTLFormula3Access().getSubexpression1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula3__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula3__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula3__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula3Access().getGroup_1()); }
	(rule__LTLFormula3__Group_1__0)?
	{ after(grammarAccess.getLTLFormula3Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTLFormula3__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula3__Group_1__0__Impl
	rule__LTLFormula3__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula3__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula3Access().getRKeyword_1_0()); }
	'R'
	{ after(grammarAccess.getLTLFormula3Access().getRKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula3__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula3__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula3__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula3Access().getSubexpression2Assignment_1_1()); }
	(rule__LTLFormula3__Subexpression2Assignment_1_1)
	{ after(grammarAccess.getLTLFormula3Access().getSubexpression2Assignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTLFormula4__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula4__Group__0__Impl
	rule__LTLFormula4__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula4__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula4Access().getSubexpressionAssignment_0()); }
	(rule__LTLFormula4__SubexpressionAssignment_0)
	{ after(grammarAccess.getLTLFormula4Access().getSubexpressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula4__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula4__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula4__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula4Access().getGroup_1()); }
	(rule__LTLFormula4__Group_1__0)?
	{ after(grammarAccess.getLTLFormula4Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTLFormula4__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula4__Group_1__0__Impl
	rule__LTLFormula4__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula4__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula4Access().getEqualsSignGreaterThanSignKeyword_1_0()); }
	'=>'
	{ after(grammarAccess.getLTLFormula4Access().getEqualsSignGreaterThanSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula4__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula4__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula4__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula4Access().getConsequenceAssignment_1_1()); }
	(rule__LTLFormula4__ConsequenceAssignment_1_1)
	{ after(grammarAccess.getLTLFormula4Access().getConsequenceAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTLFormula5__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula5__Group_0__0__Impl
	rule__LTLFormula5__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula5__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula5Access().getXKeyword_0_0()); }
	'X'
	{ after(grammarAccess.getLTLFormula5Access().getXKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula5__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula5__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula5__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula5Access().getNextSubexpressionAssignment_0_1()); }
	(rule__LTLFormula5__NextSubexpressionAssignment_0_1)
	{ after(grammarAccess.getLTLFormula5Access().getNextSubexpressionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTLFormula5__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula5__Group_1__0__Impl
	rule__LTLFormula5__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula5__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula5Access().getFKeyword_1_0()); }
	'F'
	{ after(grammarAccess.getLTLFormula5Access().getFKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula5__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula5__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula5__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula5Access().getEventuallySubexpressionAssignment_1_1()); }
	(rule__LTLFormula5__EventuallySubexpressionAssignment_1_1)
	{ after(grammarAccess.getLTLFormula5Access().getEventuallySubexpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTLFormula5__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula5__Group_2__0__Impl
	rule__LTLFormula5__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula5__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula5Access().getGKeyword_2_0()); }
	'G'
	{ after(grammarAccess.getLTLFormula5Access().getGKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula5__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula5__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula5__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula5Access().getAlwaysSubexpressionAssignment_2_1()); }
	(rule__LTLFormula5__AlwaysSubexpressionAssignment_2_1)
	{ after(grammarAccess.getLTLFormula5Access().getAlwaysSubexpressionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTLFormula5__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula5__Group_3__0__Impl
	rule__LTLFormula5__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula5__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula5Access().getNotKeyword_3_0()); }
	'not'
	{ after(grammarAccess.getLTLFormula5Access().getNotKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula5__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula5__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula5__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula5Access().getNotSubexpressionAssignment_3_1()); }
	(rule__LTLFormula5__NotSubexpressionAssignment_3_1)
	{ after(grammarAccess.getLTLFormula5Access().getNotSubexpressionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTLFormula6__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula6__Group_3__0__Impl
	rule__LTLFormula6__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula6__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula6Access().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getLTLFormula6Access().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula6__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula6__Group_3__1__Impl
	rule__LTLFormula6__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula6__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula6Access().getExpressionAssignment_3_1()); }
	(rule__LTLFormula6__ExpressionAssignment_3_1)
	{ after(grammarAccess.getLTLFormula6Access().getExpressionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula6__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTLFormula6__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula6__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTLFormula6Access().getRightParenthesisKeyword_3_2()); }
	')'
	{ after(grammarAccess.getLTLFormula6Access().getRightParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTLModel__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLModelAccess().getNameLTLIDTerminalRuleCall_2_0()); }
		RULE_LTLID
		{ after(grammarAccess.getLTLModelAccess().getNameLTLIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__FormulaAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLModelAccess().getFormulaLTLFormulaParserRuleCall_4_0()); }
		ruleLTLFormula
		{ after(grammarAccess.getLTLModelAccess().getFormulaLTLFormulaParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__AlphabetAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLModelAccess().getAlphabetSetOfSymbolsParserRuleCall_5_1_0()); }
		ruleSetOfSymbols
		{ after(grammarAccess.getLTLModelAccess().getAlphabetSetOfSymbolsParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLModel__DefinitionsAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLModelAccess().getDefinitionsDefinitionParserRuleCall_6_1_0()); }
		ruleDefinition
		{ after(grammarAccess.getLTLModelAccess().getDefinitionsDefinitionParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__PropositionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getPropositionLTLIDTerminalRuleCall_0_0()); }
		RULE_LTLID
		{ after(grammarAccess.getDefinitionAccess().getPropositionLTLIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__SymbolsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getSymbolsSetOfSymbolsParserRuleCall_2_0()); }
		ruleSetOfSymbols
		{ after(grammarAccess.getDefinitionAccess().getSymbolsSetOfSymbolsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOfSymbols__SymbolsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetOfSymbolsAccess().getSymbolsLTLIDTerminalRuleCall_1_0()); }
		RULE_LTLID
		{ after(grammarAccess.getSetOfSymbolsAccess().getSymbolsLTLIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOfSymbols__SymbolsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetOfSymbolsAccess().getSymbolsLTLIDTerminalRuleCall_2_1_0()); }
		RULE_LTLID
		{ after(grammarAccess.getSetOfSymbolsAccess().getSymbolsLTLIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula__FormulaAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormulaAccess().getFormulaLTLFormula1ParserRuleCall_0_0()); }
		ruleLTLFormula1
		{ after(grammarAccess.getLTLFormulaAccess().getFormulaLTLFormula1ParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula__AlternativesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormulaAccess().getAlternativesLTLFormula1ParserRuleCall_1_1_0()); }
		ruleLTLFormula1
		{ after(grammarAccess.getLTLFormulaAccess().getAlternativesLTLFormula1ParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula__AlternativesAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormulaAccess().getAlternativesLTLFormula1ParserRuleCall_1_2_1_0()); }
		ruleLTLFormula1
		{ after(grammarAccess.getLTLFormulaAccess().getAlternativesLTLFormula1ParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula1__FormulaAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormula1Access().getFormulaLTLFormula2ParserRuleCall_0_0()); }
		ruleLTLFormula2
		{ after(grammarAccess.getLTLFormula1Access().getFormulaLTLFormula2ParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula1__AlternativesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormula1Access().getAlternativesLTLFormula2ParserRuleCall_1_1_0()); }
		ruleLTLFormula2
		{ after(grammarAccess.getLTLFormula1Access().getAlternativesLTLFormula2ParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula1__AlternativesAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormula1Access().getAlternativesLTLFormula2ParserRuleCall_1_2_1_0()); }
		ruleLTLFormula2
		{ after(grammarAccess.getLTLFormula1Access().getAlternativesLTLFormula2ParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula2__Subexpression1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormula2Access().getSubexpression1LTLFormula3ParserRuleCall_0_0()); }
		ruleLTLFormula3
		{ after(grammarAccess.getLTLFormula2Access().getSubexpression1LTLFormula3ParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula2__Subexpression2Assignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormula2Access().getSubexpression2LTLFormula2ParserRuleCall_1_1_0()); }
		ruleLTLFormula2
		{ after(grammarAccess.getLTLFormula2Access().getSubexpression2LTLFormula2ParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula3__Subexpression1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormula3Access().getSubexpression1LTLFormula4ParserRuleCall_0_0()); }
		ruleLTLFormula4
		{ after(grammarAccess.getLTLFormula3Access().getSubexpression1LTLFormula4ParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula3__Subexpression2Assignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormula3Access().getSubexpression2LTLFormula3ParserRuleCall_1_1_0()); }
		ruleLTLFormula3
		{ after(grammarAccess.getLTLFormula3Access().getSubexpression2LTLFormula3ParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula4__SubexpressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormula4Access().getSubexpressionLTLFormula5ParserRuleCall_0_0()); }
		ruleLTLFormula5
		{ after(grammarAccess.getLTLFormula4Access().getSubexpressionLTLFormula5ParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula4__ConsequenceAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormula4Access().getConsequenceLTLFormula4ParserRuleCall_1_1_0()); }
		ruleLTLFormula4
		{ after(grammarAccess.getLTLFormula4Access().getConsequenceLTLFormula4ParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula5__NextSubexpressionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormula5Access().getNextSubexpressionLTLFormula5ParserRuleCall_0_1_0()); }
		ruleLTLFormula5
		{ after(grammarAccess.getLTLFormula5Access().getNextSubexpressionLTLFormula5ParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula5__EventuallySubexpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormula5Access().getEventuallySubexpressionLTLFormula5ParserRuleCall_1_1_0()); }
		ruleLTLFormula5
		{ after(grammarAccess.getLTLFormula5Access().getEventuallySubexpressionLTLFormula5ParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula5__AlwaysSubexpressionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormula5Access().getAlwaysSubexpressionLTLFormula5ParserRuleCall_2_1_0()); }
		ruleLTLFormula5
		{ after(grammarAccess.getLTLFormula5Access().getAlwaysSubexpressionLTLFormula5ParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula5__NotSubexpressionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormula5Access().getNotSubexpressionLTLFormula5ParserRuleCall_3_1_0()); }
		ruleLTLFormula5
		{ after(grammarAccess.getLTLFormula5Access().getNotSubexpressionLTLFormula5ParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula5__SubexpressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormula5Access().getSubexpressionLTLFormula6ParserRuleCall_4_0()); }
		ruleLTLFormula6
		{ after(grammarAccess.getLTLFormula5Access().getSubexpressionLTLFormula6ParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula6__PropositionExpressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormula6Access().getPropositionExpressionPropositionExpressionParserRuleCall_0_0()); }
		rulePropositionExpression
		{ after(grammarAccess.getLTLFormula6Access().getPropositionExpressionPropositionExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula6__TrueExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormula6Access().getTrueExpressionTrueKeyword_1_0()); }
		(
			{ before(grammarAccess.getLTLFormula6Access().getTrueExpressionTrueKeyword_1_0()); }
			'true'
			{ after(grammarAccess.getLTLFormula6Access().getTrueExpressionTrueKeyword_1_0()); }
		)
		{ after(grammarAccess.getLTLFormula6Access().getTrueExpressionTrueKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula6__FalseExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormula6Access().getFalseExpressionFalseKeyword_2_0()); }
		(
			{ before(grammarAccess.getLTLFormula6Access().getFalseExpressionFalseKeyword_2_0()); }
			'false'
			{ after(grammarAccess.getLTLFormula6Access().getFalseExpressionFalseKeyword_2_0()); }
		)
		{ after(grammarAccess.getLTLFormula6Access().getFalseExpressionFalseKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTLFormula6__ExpressionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTLFormula6Access().getExpressionLTLFormulaParserRuleCall_3_1_0()); }
		ruleLTLFormula
		{ after(grammarAccess.getLTLFormula6Access().getExpressionLTLFormulaParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_LTLID : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
