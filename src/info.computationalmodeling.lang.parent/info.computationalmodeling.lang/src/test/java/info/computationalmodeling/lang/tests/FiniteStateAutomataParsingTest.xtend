/*
 * generated by Xtext 2.36.0
 */
package info.computationalmodeling.lang.tests

import com.google.inject.Inject
import info.computationalmodeling.lang.finitestateautomata.FiniteStateAutomatonModel
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

@ExtendWith(InjectionExtension)
@InjectWith(FiniteStateAutomataInjectorProvider)
class FiniteStateAutomataParsingTest {
	@Inject
	ParseHelper<FiniteStateAutomatonModel> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''finite state automaton WLAN {
    S1 initial; final -- s --> S1
    S1 --- h ---> S2
    S2 --- p ---> S3
    S3 --- p ---> S3
    S3 --- c ---> S1

    S2 --- # ---> S1
    S3 --- # ---> S1
}''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
