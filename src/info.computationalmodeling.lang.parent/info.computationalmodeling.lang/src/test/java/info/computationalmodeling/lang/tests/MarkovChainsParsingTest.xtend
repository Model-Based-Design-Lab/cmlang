/*
 * generated by Xtext 2.36.0
 */
package info.computationalmodeling.lang.tests

import com.google.inject.Inject
import info.computationalmodeling.lang.markovchains.MarkovChainModel
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

@ExtendWith(InjectionExtension)
@InjectWith(MarkovChainsInjectorProvider)
class MarkovChainsParsingTest {
	@Inject
	ParseHelper<MarkovChainModel> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''markov chain Model {
    A[p: 0.9] -- 1/2  -> B
    A -- 1/2  -> A
    B -- 1 -> C
    C -- 1/2 -> C
    C -- 1/2 -> A
}''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
