grammar org.xtext.computationalmodelling.RegularExpressions with org.eclipse.xtext.common.Terminals

generate regularexpressions "http://www.xtext.org/computationalmodelling/RegularExpressions"


RegExModel:
	'regular' 'expression' name=ID '='
	expression = RegularExpression
	('where' (definitions += Definition )*
	)?
	
;

Definition:
	symbol = ID '=' expression = RegularExpression 
;

RegularExpression:
	expression = RegularExpression1 
	(
		'+' 
		alternatives += RegularExpression1 
		('+' alternatives += RegularExpression1 )*
	)?
;

RegularExpression1:
	expression = RegularExpression2
	(
		'.'
		concatenations += RegularExpression2
		('.' concatenations += RegularExpression2)*
 	)?
;


RegularExpression2:
		subexpression = RegularExpression3 
		(
			(kleene = '*') |
			(omega = '**')			
		)?
;


RegularExpression3:
		{RegularExpression3} emptyLangExpression = EmptyLanguageExpression |
		{RegularExpression3} emptyWordExpression = EmptyWordExpression |
		{RegularExpression3} letterExpression = LetterExpression |
		{RegularExpression3} referenceExpression = ReferenceExpression |
		'(' expression = RegularExpression ')'
;



EmptyLanguageExpression:
	EMPTYSET
;

EmptyWordExpression:
	EPSILON
;

LetterExpression:
	Letter
;

ReferenceExpression:
	'@' reference = ID
;

Letter:
	SIMPLELETTER | STRING
;

terminal SIMPLELETTER:
	('a'..'z'|'A'..'Z')
;

terminal EMPTYSET:
	('\\' 'o')
;

terminal EPSILON:
	('\\' 'e')
;
